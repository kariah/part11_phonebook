{"version":3,"sources":["services/persons.js","components/PersonForm.js","components/Filter.js","components/Persons.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","persons","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","status","PersonForm","props","showAll","setPersons","setShowAll","setInfoMessage","setErrorMessage","useState","person","name","number","newPerson","setNewPerson","handlePersonChange","event","target","value","onSubmit","preventDefault","dialogResult","personFound","undefined","find","window","confirm","console","log","p","changedPerson","personService","returnedPerson","map","setTimeout","info","catch","error","filter","updateNumber","personObject","length","concat","onChange","type","Filter","filterValue","filteredPersons","toLowerCase","includes","Persons","onClick","filtered","Notification","infoMessage","errorMessage","className","App","useEffect","initialPersons","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6c00034.chunk.js","sourcesContent":["import axios from 'axios'\r\n/*const baseUrl = 'http://localhost:3001/api/persons'*/\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\nconst getAll = () => { \r\n    const request = axios.get(baseUrl)   \r\n    return request.then(response => response.data)   \r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n} \r\n\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`) \r\n    return request.then(response => response.status) \r\n}\r\n\r\nconst persons = {\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update,\r\n    remove: remove,\r\n}\r\n\r\nexport default persons","import React, { useState } from 'react'\r\nimport personService from '../services/persons'\r\n\r\n\r\nconst PersonForm = (props) => {\r\n    const persons = props.persons\r\n    const showAll = props.showAll\r\n    const setPersons = props.setPersons\r\n    const setShowAll = props.setShowAll\r\n    const setInfoMessage = props.setInfoMessage \r\n    const setErrorMessage = props.setErrorMessage\r\n\r\n    const [newPerson, setNewPerson] = useState({\r\n        person: {\r\n            id: 0,\r\n            name: \"\",\r\n            number: \"\"\r\n        }\r\n    });\r\n\r\n    const updateNumber = (id, number) => {\r\n        //console.log(\"id, number \", id, number)\r\n\r\n        const person = persons.find(p => p.id === id)\r\n        const changedPerson = { ...person, number: number }\r\n\r\n        personService\r\n            .update(id, changedPerson)\r\n            .then(returnedPerson => {\r\n                setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\r\n                setShowAll(showAll.map(person => person.id !== id ? person : returnedPerson))\r\n\r\n                setTimeout(() => {\r\n                    let info = `Personid ${id} was updated succesfully`\r\n                    setInfoMessage(info)\r\n                }, 1000)\r\n                setTimeout(() => {\r\n                    setInfoMessage(null)\r\n                }, 5000)\r\n\r\n            })\r\n            .catch(error => { \r\n                setErrorMessage(`Person '${person.name}' was already deleted from server`)\r\n                setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                }, 5000)\r\n                setPersons(persons.filter(p => p.id !== id)) \r\n            })\r\n    }\r\n\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        let personFound = null\r\n        let dialogResult\r\n\r\n        if (newPerson.person.name !== undefined) {\r\n            /* personFound = (persons.find(person => person.name === newPerson.person.name) ? true : false)*/\r\n            personFound = (persons.find(person => person.name === newPerson.person.name))\r\n\r\n            if (personFound != null) {\r\n                dialogResult = window.confirm(`${newPerson.person.name} is already added to phonebook, replace the old number with new one`);\r\n            }\r\n        }\r\n\r\n        console.log(\"personFound \", personFound)\r\n\r\n        if (personFound != null) {\r\n            if (dialogResult === true) {\r\n                updateNumber(personFound.id, newPerson.person.number)\r\n                return\r\n            }\r\n            else {\r\n                return\r\n            }\r\n        }\r\n\r\n        const personObject = {\r\n            name: newPerson.person.name,\r\n            number: newPerson.person.number,\r\n            id: persons.length + 1,\r\n        }\r\n\r\n\r\n        //add to server db\r\n        personService\r\n            .create(personObject)\r\n            .then(returnedPerson => {\r\n                setPersons(persons.concat(returnedPerson))\r\n                setShowAll(persons.concat(returnedPerson))\r\n                setNewPerson({\r\n                    person: {\r\n                        id: 0,\r\n                        name: \"\",\r\n                        number: \"\"\r\n                    }\r\n                })\r\n\r\n                setTimeout(() => {\r\n                    let info = `Person ${personObject.name} was created succesfully`\r\n                    setInfoMessage(info)\r\n                }, 1000)\r\n                setTimeout(() => {\r\n                    setInfoMessage(null)\r\n                }, 5000)\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(\r\n                    `Create person ${personObject.name} failed.`\r\n                )\r\n                setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                }, 5000)\r\n            })\r\n    }\r\n\r\n\r\n    const handlePersonChange = (event) => {\r\n        let name = newPerson.person.name\r\n        let number = newPerson.person.number\r\n\r\n        if (event.target.id === \"name\") {\r\n            name = event.target.value\r\n        }\r\n        else if (event.target.id === \"number\") {\r\n            number = event.target.value\r\n        }\r\n\r\n\r\n        setNewPerson({\r\n            ...newPerson, person: {\r\n                name: name,\r\n                number: number\r\n            }\r\n        },\r\n        )\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                Name:\r\n                    <input\r\n                    value={newPerson.person.name}\r\n                    onChange={handlePersonChange}\r\n                    id=\"name\"\r\n                />\r\n\r\n            </div>\r\n            <div>\r\n                Number:\r\n                    <input\r\n                    value={newPerson.person.number}\r\n                    onChange={handlePersonChange}\r\n                    id=\"number\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\n\r\nconst Filter = (props) => {\r\n    const persons = props.persons\r\n    const setShowAll = props.setShowAll \r\n\r\n    const filterPersons = (event) => { \r\n\r\n        let filterValue = event.target.value\r\n\r\n        if (persons !== undefined && persons.length > 0) {\r\n            const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filterValue.toLowerCase())) \r\n\r\n            if (filteredPersons.length > 0) { \r\n\r\n                setShowAll(filteredPersons)\r\n            }\r\n            else { \r\n                setShowAll([])\r\n            } \r\n        }\r\n\r\n    }\r\n \r\n\r\n    return (\r\n        <div>\r\n            Filter shown with\r\n            <input onChange={filterPersons}>\r\n            </input>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\nimport personService from '../services/persons'\r\n\r\n\r\nconst Persons = (props) => {\r\n    const showAll = props.showAll\r\n    const persons = props.persons\r\n    const setPersons = props.setPersons\r\n    const setShowAll = props.setShowAll\r\n    const setInfoMessage = props.setInfoMessage\r\n    const setErrorMessage = props.setErrorMessage\r\n\r\n    const removePerson = (id) => { \r\n        personService\r\n            .remove(id)\r\n            .then(response => {\r\n                console.log(\"response \", response)\r\n\r\n                let filtered = showAll.filter(person => person.id !== id)\r\n                setShowAll(filtered)\r\n\r\n                filtered = persons.filter(person => person.id !== id)\r\n                setPersons(filtered)\r\n\r\n                setTimeout(() => {\r\n                    let info = `Personid ${id} was deleted succesfully`\r\n                    setInfoMessage(info)\r\n                }, 1000)\r\n                setTimeout(() => {\r\n                    setInfoMessage(null)\r\n                }, 5000)\r\n            })\r\n            .catch(error => { \r\n                setErrorMessage(\r\n                    `Personid '${id}' was already removed from server`\r\n                )\r\n                setTimeout(() => {\r\n                    setErrorMessage(null) \r\n                }, 5000)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {showAll.map(person =>\r\n                <p key={person.id}>{person.name} {person.number}\r\n                    <button onClick={() =>\r\n                        window.confirm(`Delete ${person.name}?`) &&\r\n                        removePerson(person.id)}>Delete</button>\r\n                </p>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Notification = (props) => {\r\n    const infoMessage = props.infoMessage\r\n    const errorMessage = props.errorMessage\r\n\r\n    if (infoMessage === null && errorMessage === null) {\r\n        return null\r\n    }\r\n\r\n    console.log(\"infomessage \", infoMessage)\r\n    console.log(\"errorMessage \", errorMessage)\r\n\r\n\r\n    if (infoMessage !== null) {\r\n        return (\r\n            <div className=\"info\">\r\n                {infoMessage} \r\n            </div>)\r\n    }\r\n    else if (errorMessage !== null) {\r\n        return (\r\n            <div className=\"error\">\r\n                {errorMessage} \r\n            </div>)\r\n    }\r\n}\r\n//return (\r\n//    <div className=\"error\">\r\n//        {message}\r\n//        T�m� on message\r\n//    </div>\r\n//)\r\n\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport Filter from './components/Filter'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [infoMessage, setInfoMessage] = useState(null)\r\n    const [errorMessage, setErrorMessage] = useState(null) \r\n\r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(initialPersons => {\r\n                setPersons(initialPersons)\r\n                setShowAll(initialPersons)\r\n            })\r\n    }, [])\r\n\r\n\r\n    const [showAll, setShowAll] = useState(persons)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Notification infoMessage={infoMessage} errorMessage={errorMessage} />\r\n            <Filter\r\n                persons={persons}\r\n                setShowAll={setShowAll} />\r\n            <h2>Add new</h2>\r\n            <PersonForm\r\n                persons={persons}\r\n                showAll={showAll}\r\n                setPersons={setPersons}\r\n                setShowAll={setShowAll}\r\n                setInfoMessage={setInfoMessage}\r\n                setErrorMessage={setErrorMessage}\r\n            />\r\n            <h2>Numbers</h2>\r\n            <Persons\r\n                persons={persons}\r\n                showAll={showAll}\r\n                setPersons={setPersons}\r\n                setShowAll={setShowAll}\r\n                setInfoMessage={setInfoMessage}\r\n                setErrorMessage={setErrorMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}